/**
 * Mixins
 */
@mixin happy-component($size) {
	position: relative;
	display: inline-block;
	line-height: $line-height;
	vertical-align: middle;
	width: $size;
	height: $size;
	border-width: floor($size / $border_divider);
	border-style: solid;
	cursor: pointer;
	box-sizing: border-box;
	top: -2px;
}

@mixin happy-component-color($color) {
	color: $base;
	
	& > b {
		background-color: $base;
	}

	&.active {
		color: $color;

		& > b {
			background-color: $color;
		}
	}
}

@mixin happy-component-border-color($color) {
	border-color: rgba($base, 0.8);
	
	&.active {
		border-color: $color;
	}
}

@mixin happy-component-backround-color($color) {
	background-color: $color;
}

@mixin border-radius($r) {
	-webkit-border-radius: $r;
	-moz-border-radius: $r;
	border-radius: $r;
}

@mixin transition-all($duration) {
	-ms-transition: all $duration;
	-webkit-transition: all $duration;
	transition: all $duration;
}

@mixin transform($t) {
	-ms-transform: $t;
	-webkit-transform: $t;
	transform: $t;
}

@mixin box-shadow($a, $b, $c, $d, $color) {
	-webkit-box-shadow: $a $b $c $d $color;
	-moz-box-shadow:    $a $b $c $d $color;
	box-shadow:         $a $b $c $d $color;
}

.happy-color {
	@include happy-component-color($base);

	&.primary { @include happy-component-color($primary); }
	&.success { @include happy-component-color($success); }
	&.info { @include happy-component-color($info); }
	&.warning { @include happy-component-color($warning); }
	&.danger { @include happy-component-color($danger); }
	&.white { @include happy-component-color($white); }
}

.happy-border-color {
	@include happy-component-border-color($base);

	&.primary { @include happy-component-border-color($primary); }
	&.success { @include happy-component-border-color($success); }
	&.info { @include happy-component-border-color($info); }
	&.warning { @include happy-component-border-color($warning); }
	&.danger { @include happy-component-border-color($danger); }
	&.white { @include happy-component-border-color($white); }
}
